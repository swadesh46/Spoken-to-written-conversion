# -*- coding: utf-8 -*-
"""problem 1 _ spoken to written.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tLDcSRNfMuSK0hfVSoVmZ92LXqXvTh7h
"""

rules = {"word_to_number":{"zero": 0,"one" : 1,"two": 2,"three": 3,"four": 4,"five": 5,"six": 6,"seven": 7,
                        "eight": 8,"nine": 9,"ten": 10,"twenty": 20,"thirty": 30,"forty": 40,"fifty": 50,
                        "sixty": 60,"seventy": 70,"eighty": 80,"ninety": 90,"hundred": 100},
            "Tuples": {"single":1,"double":2,"triple":3,"quadruple":4,"quintuple":5,"sextuple":6,
                         "septuple":7,"octuple":8,"nonuple":9,"decuple":10},
            "short_form": {"C M": "CM","P M": "PM","D M": "DM","A M": "AM"}}

def check_front_last_word(word):
  last=''
  front=''
  actual_word=''
  if (word[0]==',' or word[0]=='.') and (word[-1]==',' or word[-1]=='.'):
    front=word[0]
    actual_word=word[1:-1]
    last=word[-1]
  elif (word[0]==',' or word[0]=='.'):
    front=word[0]
    actual_word=word[1:]
  elif (word[-1]==',' or word[-1]=='.'):
    last=word[-1]
    actual_word=word[0:-1]
  else:
    actual_word=word
  return front,actual_word,last


def convert_to_written_english(sent,rules):
  splited=sent.split()
  splited_count=len(splited)

  word_to_number=rules['word_to_number']
  Tuples=rules['Tuples']
  short_form=rules['short_form']
  output_sent=''
  i=0
  while i < splited_count:
    f,w,l=check_front_last_word(splited[i])
    if i+1!=splited_count:
      f_n,w_n,l_n=check_front_last_word(splited[i+1])

      if w.lower() in word_to_number.keys() and (w_n.lower()=='dollars' or w_n.lower()=='dollar'):
        output_sent=output_sent+' '+f+'$'+str(word_to_number[w.lower()])+l_n
        i=i+2
      elif w.lower() in word_to_number.keys():
        output_sent=output_sent+' '+f+str(word_to_number[w.lower()])+l
        i=i+1
      elif w.lower() in Tuples.keys() and len(w_n)==1:  
        output_sent=output_sent+" "+f+(w_n*Tuples[w.lower()])+l_n
        i=i+2
      elif (w+" "+w_n) in short_form.keys():
        output_sent=output_sent+" "+f+w+w_n+l_n
        i=i+2
      else:
        output_sent=output_sent+" "+f+w+l
        i=i+1
    else :
      output_sent=output_sent+" "+f+w+l
      i=i+1
  return output_sent

#sent='I am holding hundred dollars. double A, fifty pen at 6 PM'
s=input('Please input the sentence')
convert_to_written_english(s,rules)